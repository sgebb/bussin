@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inherits LayoutComponentBase
@inject IPreferencesService PreferencesService
@inject NavigationStateService NavState
@inject IAuthenticationService AuthService

<AuthorizeView>
    <Authorized>
        <div class="page" data-theme="@(isDarkMode ? "dark" : "light")">
            <div class="sidebar">
                <NavMenu IsDarkMode="@isDarkMode" OnToggleDarkMode="@ToggleDarkMode" />
            </div>

            <main>
                <article class="content">
                    @Body
                </article>
            </main>
        </div>

        <ToastNotification />
        <BuildInfo />
    </Authorized>
    <NotAuthorized>
        @Body
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool isDarkMode = false;

    protected override async Task OnInitializedAsync()
    {
        // Load dark mode preference
        var prefs = await PreferencesService.LoadPreferencesAsync();
        isDarkMode = prefs.DarkMode;
        
        // Initialize NavState for all authenticated pages
        var isAuthenticated = await AuthService.IsAuthenticatedAsync();
        if (isAuthenticated)
        {
            await NavState.InitializeAsync();
        }
    }

    private async Task ToggleDarkMode()
    {
        isDarkMode = !isDarkMode;
        
        // Save preference
        var prefs = await PreferencesService.LoadPreferencesAsync();
        prefs.DarkMode = isDarkMode;
        await PreferencesService.SavePreferencesAsync(prefs);
        
        StateHasChanged();
    }

}
